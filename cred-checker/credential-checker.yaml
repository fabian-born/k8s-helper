---
apiVersion: v1
kind: Namespace
metadata:
   name: epicshit-io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: credential-checker-sa
  namespace: epicshit-io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: credential-checker-sa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: credential-checker-sa
  namespace: epicshit-io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: credential-check-job
  namespace: epicshit-io
spec:
  template:
    spec:
      serviceAccountName: credential-checker-sa
      containers:
        - name: credential-checker
          image: bitnami/kubectl
          volumeMounts:
            - name: manifests
              mountPath: /manifests
          command: ["/bin/sh"]
          args: ["/manifests/install.sh"]
      restartPolicy: OnFailure
      volumes:
        - name: manifests
          configMap:
            name: credential-checker-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: credential-checker-config
  namespace: epicshit-io
data:
  install.sh: |-
    while : ; do
      for ns in `kubectl get ns --no-headers | awk -F" " '{ print $1 }' | grep -iv "kube"`; 
      do
          cmd=`kubectl get secret my-registry-cred -n $ns --no-headers --ignore-not-found  | awk -F" " '{ print $1}'`
          # kubectl get secret -n $ns
          if [ -z $cmd ]
          then
            echo "=============== $ns"
            kubectl get secret -n kube-system my-registry-cred -o yaml | sed  '/namespace: kube-system/d' | kubectl apply -n $ns -f -
            kubectl patch serviceaccount default -p '{"imagePullSecrets": [{"name": "my-registry-cred"}]}' -n $ns
          fi
      done
      sleep 10
    done
